Sintactical rules:

program ::= "def" "(" decllist ")" "{" cmpdstmt "}"

decllist ::= declaration | declaration with multiple identifiers";" 

declaration ::= type "space" IDENTIFIER

type1 ::= "boolean" | "char" | "int" | "real" | "string"

arraydecl ::= type "[" nr "]"

type ::= type1 | arraydecl

cmpdstmt ::= "{" stmtlist "}"

stmtlist ::= stmt | stmt ";" stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt

assignstmt ::= IDENTIFIER ":=" expression

expression ::= expression "+" term | term

term ::= term "*" factor | factor

factor ::= "(" expression ")" | IDENTIFIER

iostmt ::= "input" | "print" "(" IDENTIFIER ")"

structstmt ::= cmpdstmt | ifstmt | whilestmt

ifstmt ::= "if" "(" condition ")" "{" stmt "}" "else" "{" stmt "}"

whilestmt ::= "while" "(" condition ")" "{" stmt "}"

condition ::= "(" expression RELATION expression ")"

RELATION ::= "<" | "<=" | "=" | "<>" | ">=" | ">"
