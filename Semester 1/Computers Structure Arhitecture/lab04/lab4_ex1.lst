     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit               
     8                                  import exit msvcrt.dll    
     9                                                            
    10                                  
    11                                  ; Given the byte A, obtain the integer number n represented on the bits 2-4 of A. Then obtain the byte B by rotating A n positions to the right. Compute the doubleword C as follows:
    12                                  ; the bits 8-15 of C have the value 0
    13                                  ; the bits 16-23 of C are the same as the bits of B
    14                                  ; the bits 24-31 of C are the same as the bits of A
    15                                  ; the bits 0-7 of C have the value 1
    16                                  
    17                                  segment data use32 class=data
    18 00000000 8C                               A db 10001100b
    19 00000001 00                               B db 0b
    20 00000002 00000000                         C dd 0b
    21 00000006 00                               n db 0b
    22                                  
    23                                  
    24                                  segment code use32 class=code
    25                                      start:
    26                                      
    27 00000000 B800000000                      mov eax, 0
    28 00000005 BB00000000                      mov ebx, 0
    29 0000000A B900000000                      mov ecx, 0
    30 0000000F BA00000000                      mov edx, 0
    31                                          
    32 00000014 A0[00000000]                    mov al, [A]
    33 00000019 241C                            and al, 00011100b
    34 0000001B B102                            mov cl, 2                   ; n <- bits 2-4 of A
    35 0000001D D2E8                            shr al, cl
    36 0000001F A2[06000000]                    mov [n], al
    37                                          
    38 00000024 8A0D[06000000]                  mov cl, [n]
    39 0000002A A0[00000000]                    mov al, [A]                 ; obtained B = 
    40 0000002F D2C8                            ror al, cl
    41 00000031 A2[01000000]                    mov [B], al
    42                                          
    43 00000036 B800000000                      mov eax, 0
    44 0000003B A1[01000000]                    mov eax, [B]                     ;   the bits 16-23 of C are the same as the bits of B
    45 00000040 B110                            mov cl, 16
    46 00000042 D3C0                            rol eax, cl
    47 00000044 89C3                            mov ebx, eax 
    48                                          
    49 00000046 B800000000                      mov eax, 0
    50 0000004B A1[00000000]                    mov eax, [A]
    51 00000050 B118                            mov cl, 24                  ; the bits 24-31 of C are the same as the bits of A
    52 00000052 D3C0                            rol eax,cl
    53 00000054 09C3                            or ebx, eax 
    54                                          
    55                                          
    56 00000056 80CBFF                          or bl, 11111111b        ; the bits 0-7 of C have the value 1
    57                                          
    58                                          
    59                                          
    60                                          
    61                                          
    62                                          
    63                                          
    64                                          
    65                                          
    66                                          
    67                                          
    68                                          
    69                                          
    70                                          
    71                                          
    72 00000059 6A00                            push    dword 0      
    73 0000005B FF15[00000000]                  call    [exit]       
