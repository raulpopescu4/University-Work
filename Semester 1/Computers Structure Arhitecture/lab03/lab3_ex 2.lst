     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a db 2
    14 00000001 0A                          b db 10
    15 00000002 3011                        c dw 4400
    16 00000004 08000000                    e dd 8
    17 00000008 0A00000000000000            x dq 10
    18                                      
    19                                  
    20                                  ; (a+b*c+2/c)/(2+a)+e+x; a,b-byte; c-word; e-doubleword; x-qword
    21                                  segment code use32 class=code
    22                                      start:
    23                                      
    24 00000000 B800000000                      mov eax, 0
    25 00000005 BB00000000                      mov ebx, 0
    26 0000000A B900000000                      mov ecx, 0
    27 0000000F BA00000000                      mov edx, 0
    28                                          
    29 00000014 66A1[02000000]                  mov ax, [c]
    30 0000001A 8A1D[01000000]                  mov bl, [b]
    31 00000020 F6E3                            mul bl
    32 00000022 89C1                            mov ecx, eax
    33 00000024 66B80200                        mov ax, 2
    34 00000028 668B1D[02000000]                mov bx, [c]
    35 0000002F 66F7F3                          div bx                ;(a+b*c+2/c)/(2+a)
    36 00000032 01C1                            add ecx, eax
    37 00000034 020D[00000000]                  add cl, [a]
    38 0000003A 89C8                            mov eax, ecx
    39 0000003C 8A1D[00000000]                  mov bl, [a]
    40 00000042 6683C302                        add bx, 2
    41 00000046 66F7F3                          div bx
    42                                          
    43 00000049 0305[04000000]                  add eax, [e]
    44 0000004F 8B1D[08000000]                  mov ebx, [x+0]
    45 00000055 8B0D[0C000000]                  mov ecx, [x+4]       ;(a+b*c+2/c)/(2+a)+e+x
    46 0000005B 01C3                            add ebx, eax
    47                                          
    48                                          
    49                                          
    50                                      
    51                                          
    52                                      
    53                                          
    54 0000005D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    55 0000005F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
