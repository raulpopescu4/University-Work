     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose, printf
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 546865206E756D6265-         format db "The number of odd digits is %d", 0
    15 00000009 72206F66206F646420-
    15 00000012 646967697473206973-
    15 0000001B 20256400           
    16 0000001F 6578342E74787400            file_name db "ex4.txt", 0
    17 00000027 7200                        access_mode db "r", 0
    18                                      
    19 00000029 FFFFFFFF                    file_descriptor dd -1
    20                                      len equ 100  
    21 0000002D 00<rept>                    text times len db 0 
    22                                      
    23                                      
    24                                  
    25                                      ;A text file is given. Read the content of the file, count the number of odd digits and display the result on the screen. The name of text file is defined in the data segment.
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[27000000]                    push dword access_mode     
    29 00000005 68[1F000000]                    push dword file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33 00000013 A3[29000000]                    mov [file_descriptor], eax
    34                                           
    35 00000018 83F800                          cmp eax, 0
    36 0000001B 7442                            je exitprogram
    37                                          
    38 0000001D FF35[29000000]                  push dword [file_descriptor]
    39 00000023 6A64                            push dword len
    40 00000025 6A01                            push dword 1
    41 00000027 68[2D000000]                    push dword text        
    42 0000002C FF15[00000000]                  call [fread]
    43 00000032 83C410                          add esp, 4*4
    44                                          
    45 00000035 89C1                            mov ecx, eax
    46 00000037 E326                            jecxz exitprogram
    47 00000039 FC                              cld
    48 0000003A BE[2D000000]                    mov esi, text
    49 0000003F BB00000000                      mov ebx, 0
    50                                          
    51                                          check_odd:
    52 00000044 AC                                  lodsb
    53 00000045 2C30                                sub al, '0'+0
    54 00000047 2401                                and al, 00000001b
    55 00000049 3C01                                cmp al, 1
    56 0000004B 7501                                jne no_increase
    57 0000004D 43                                  inc ebx
    58                                          
    59                                          
    60                                          no_increase:
    61 0000004E E2F4                                loop check_odd
    62                                              
    63 00000050 53                              push dword ebx
    64 00000051 68[00000000]                    push dword format
    65 00000056 FF15[00000000]                  call [printf]
    66 0000005C 83C408                          add esp, 4 * 2
    67                                          exitprogram:
    68 0000005F FF35[29000000]                      push dword [file_descriptor]
    69 00000065 FF15[00000000]                      call [fclose]
    70 0000006B 83C404                              add esp, 4
    71                                          
    72 0000006E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 00000070 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
